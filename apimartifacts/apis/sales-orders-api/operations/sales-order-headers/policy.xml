<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.
-->
<policies>
	<inbound>
		<base />
		<set-query-parameter name="api-version" exists-action="skip">
			<value>2022-05-01</value>
		</set-query-parameter>
		<set-query-parameter name="sp" exists-action="append">
			<value>{{nocodeapi-sp}}</value>
		</set-query-parameter>
		<set-query-parameter name="sv" exists-action="append">
			<value>{{nocodeapi-sv}}</value>
		</set-query-parameter>
		<set-query-parameter name="sig" exists-action="append">
			<value>{{nocodeapi-sig}}</value>
		</set-query-parameter>
		<set-backend-service base-url="https://logic-demo-integrationsvcs.azurewebsites.net/api/wf-demo-integrationsvcs-nocodeapi/triggers/When_a_HTTP_request_is_received/invoke/orderlines" />
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
	</outbound>
	<on-error>
		<base />
	</on-error>
</policies>